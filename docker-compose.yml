version: '3.8'
services:
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - 5433:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - 6379:6379

  worker:
    build: 
      context: ./back-end
      dockerfile: Dockerfile.worker
    command: celery -A controllers.celery_controller.celery_config.celery worker --loglevel=info
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432  # Set the database port to match your PostgreSQL service
      - SECRET_KEY=ADFAKJFDLJEOQRIOPQ498689780
      - JWT_SECRET=ADFAKJFDLJEOQRI
    volumes:
      - ./back-end:/app
    depends_on:
      - redis
  
  backend:
    build:
      context: ./back-end
      dockerfile: Dockerfile.backend
    command: python3 routes.py
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - DB_HOST=db
      - DB_PORT=5432  # Set the database port to match your PostgreSQL service
      - SECRET_KEY=ADFAKJFDLJEOQRIOPQ498689780
      - JWT_SECRET=ADFAKJFDLJEOQRI
    volumes:
      - ./back-end:/app
    ports:
      - 5000:5000
    depends_on:
      - db
      - redis


  frontend:
    build: ./front-end
    volumes:
      - ./front-end:/app
    depends_on:
      - backend
    ports:
      - 3000:3000
